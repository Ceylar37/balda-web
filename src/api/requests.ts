/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  AbstractResponseBoard,
  AbstractResponseListBoard,
  AbstractResponseLong,
  AbstractResponseTokenResponse,
  CreateGameRequest,
  GetBoardByIdRequest,
  GetBoardVersionRequest,
  LoginRequest,
  RefreshTokenRequest,
  RegisterRequest,
  TurnRequest
} from './_model';
import type { BodyType } from './instance';
import { customInstance } from './instance';

export const register = (registerRequest: BodyType<RegisterRequest>) => {
  return customInstance<AbstractResponseTokenResponse>({
    url: `/auth/register`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: registerRequest
  });
};

export const refresh = (refreshTokenRequest: BodyType<RefreshTokenRequest>) => {
  return customInstance<AbstractResponseTokenResponse>({
    url: `/auth/refresh`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: refreshTokenRequest
  });
};

export const login = (loginRequest: BodyType<LoginRequest>) => {
  return customInstance<AbstractResponseTokenResponse>({
    url: `/auth/login`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: loginRequest
  });
};

export const turn = (turnRequest: BodyType<TurnRequest>) => {
  return customInstance<AbstractResponseBoard>({
    url: `/api/game/turn`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: turnRequest
  });
};

export const createGame = (createGameRequest: BodyType<CreateGameRequest>) => {
  return customInstance<AbstractResponseBoard>({
    url: `/api/game/create`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: createGameRequest
  });
};

export const getBoard = (getBoardByIdRequest: BodyType<GetBoardByIdRequest>) => {
  return customInstance<AbstractResponseBoard>({
    url: `/api/game/board`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: getBoardByIdRequest
  });
};

export const getBoardVersion = (getBoardVersionRequest: BodyType<GetBoardVersionRequest>) => {
  return customInstance<AbstractResponseLong>({
    url: `/api/game/board/version`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: getBoardVersionRequest
  });
};

export const getBoardByPlayer = () => {
  return customInstance<AbstractResponseListBoard>({ url: `/api/game/board/player`, method: 'POST' });
};

export type RegisterResult = NonNullable<Awaited<ReturnType<typeof register>>>;
export type RefreshResult = NonNullable<Awaited<ReturnType<typeof refresh>>>;
export type LoginResult = NonNullable<Awaited<ReturnType<typeof login>>>;
export type TurnResult = NonNullable<Awaited<ReturnType<typeof turn>>>;
export type CreateGameResult = NonNullable<Awaited<ReturnType<typeof createGame>>>;
export type GetBoardResult = NonNullable<Awaited<ReturnType<typeof getBoard>>>;
export type GetBoardVersionResult = NonNullable<Awaited<ReturnType<typeof getBoardVersion>>>;
export type GetBoardByPlayerResult = NonNullable<Awaited<ReturnType<typeof getBoardByPlayer>>>;
